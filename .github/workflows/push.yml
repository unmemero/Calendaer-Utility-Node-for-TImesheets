name: CI Lint, Security, Build, PR/Notify

permissions:
  contents: write
  issues: write

on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
        working-directory: calendar_utility
      - name: Run ESLint
        run: npm run lint
        working-directory: calendar_utility

  security:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
        working-directory: calendar_utility
      - name: Run npm audit (high)
        run: npm audit --audit-level=high
        working-directory: calendar_utility

  build:
    runs-on: ubuntu-latest
    needs: security
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
        working-directory: calendar_utility
      - name: Build App
        run: npm run build
        working-directory: calendar_utility

  pr-or-notify:
    runs-on: ubuntu-latest
    needs: [lint, security, build]
    if: ${{ always() }}
    steps:
      - name: Create PR with results (on success)
        if: ${{ needs.lint.result == 'success' && needs.security.result == 'success' && needs.build.result == 'success' }}
        uses: peter-evans/create-pull-request@v5
        with:
          title: "CI Results: Lint, Security, Build Passed"
          body: |
            All CI checks passed for the recent push.

            Workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          branch: ci-results

      - name: Notify pusher via GitHub Issue (on failure)
        if: ${{ needs.lint.result != 'success' || needs.security.result != 'success' || needs.build.result != 'success' }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const actor = context.actor || process.env.GITHUB_ACTOR;
            const runUrl = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;
            const shortSha = (context.sha || process.env.GITHUB_SHA || '').slice(0,7);
            const title = `CI failed for push by @${actor} â€” ${shortSha}`;
            const body = `Hi @${actor},\n\nYour push failed CI checks.\n\nWorkflow run: ${runUrl}\n\nPlease review the logs and re-run or fix the issues.\n\n(Automated notification from CI)`;
            await github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title,
              body
            });