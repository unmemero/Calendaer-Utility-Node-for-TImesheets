name: CI Lint, Security, Build, PR/Notify

permissions:
  contents: write        # needed to push ci/results-* branch
  pull-requests: write   # needed to create PRs
  issues: write          # for the fallback issue notification

on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
        working-directory: calendar_utility
      - name: Run ESLint
        run: npm run lint
        working-directory: calendar_utility

  security:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
        working-directory: calendar_utility
      - name: Run npm audit (high)
        run: npm audit --audit-level=high
        working-directory: calendar_utility

  build:
    runs-on: ubuntu-latest
    needs: security
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
        working-directory: calendar_utility
      - name: Build App
        run: npm run build
        working-directory: calendar_utility

  pr-or-notify:
    runs-on: ubuntu-latest
    needs: [lint, security, build]
    if: ${{ always() }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Create CI results file
        run: |
          mkdir -p ci-results
          short_sha="${GITHUB_SHA::7}"
          {
            echo "# CI Results"
            echo ""
            echo "- Workflow run: ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
            echo "- Commit: ${short_sha}"
            echo "- Lint:     ${{ needs.lint.result }}"
            echo "- Security: ${{ needs.security.result }}"
            echo "- Build:    ${{ needs.build.result }}"
            echo ""
            if [ "${{ needs.lint.result }}" != "success" ] || [ "${{ needs.security.result }}" != "success" ] || [ "${{ needs.build.result }}" != "success" ]; then
              echo "> One or more checks failed. See the run for details."
            else
              echo "> All checks passed ✅"
            fi
          } > ci-results/summary.md

      - name: Get short SHA
        id: sha
        run: echo "::set-output name=short_sha::$(echo $GITHUB_SHA | cut -c1-7)"

      - name: Open PR with results (on success)
        if: ${{ needs.lint.result == 'success' && needs.security.result == 'success' && needs.build.result == 'success' }}
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "ci: add results for run ${{ github.run_id }}"
          title: "CI Results: Lint, Security, Build Passed [${{ github.ref_name }} @ ${{ steps.sha.outputs.short_sha }}] by ${{ github.actor }}"
          body: |
            All CI checks passed for the recent push.

            Workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          branch: ci/results-${{ github.run_id }}
          base: main
          add-paths: |
            ci-results/summary.md

      - name: Notify pusher via GitHub Issue (on failure)
        if: ${{ needs.lint.result != 'success' || needs.security.result != 'success' || needs.build.result != 'success' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const actor = context.actor;
            const runUrl = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;
            const shortSha = (context.sha || '').slice(0,7);

            const statuses = {
              lint: '${{ needs.lint.result }}',
              security: '${{ needs.security.result }}',
              build: '${{ needs.build.result }}'
            };
            const failed = Object.entries(statuses)
              .filter(([_, r]) => r !== 'success')
              .map(([k, r]) => `- ${k}: ${r}`)
              .join('\n') || '- none';

            const title = `CI failed for push by @${actor} — ${shortSha}`;
            const body = `Hi @${actor},\n\nYour push failed CI checks.\n\nFailed/Skipped jobs:\n${failed}\n\nWorkflow run: ${runUrl}\n\nPlease review the logs and re-run or fix the issues.\n\n(Automated notification from CI)`;

            await github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title,
              body
            });
